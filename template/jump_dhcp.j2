data "template_file" "jump{{ count }}" {
  template = file("userdata/jump.userdata")
  vars = {
    pubkey        = file(var.jump.public_key_path)
    aviSdkVersion = var.jump.aviSdkVersion
    ansibleVersion = var.ansible.version
    username = var.jump.username
  }
}

resource "vsphere_virtual_machine" "jump" {
  provider          = vsphere.vcenter$(echo {{ count }})
  name              = "jump"
  datastore_id      = data.vsphere_datastore.datastore{{ count }}.id
  resource_pool_id  = data.vsphere_resource_pool.pool{{ count }}.id
  folder            = data.vsphere_folder.folderController.path
  network_interface {
    network_id = data.vsphere_network.networkMgmt{{ count }}.id
  }
  num_cpus = var.jump.cpu
  memory = var.jump.memory
  wait_for_guest_net_routable = var.jump.wait_for_guest_net_routable
  guest_id = "guestid-jump"
  disk {
    size             = var.jump.disk
    label            = "jump.lab_vmdk"
    thin_provisioned = true
  }
  cdrom {
    client_device = true
  }
  clone {
    template_uuid = vsphere_content_library_item.ubuntuJump{{ count }}.id
  }
  vapp {
    properties = {
      hostname    = "jump"
      public-keys = file(var.jump.public_key_path)
      user-data   = base64encode(data.template_file.jump{{ count }}.rendered)
    }
  }

  connection {
    host        = self.default_ip_address
    type        = "ssh"
    agent       = false
    user        = var.jump.username
    private_key = file(var.jump.private_key_path)
  }

  provisioner "remote-exec" {
    inline      = [
      "while [ ! -f /tmp/cloudInitDone.log ]; do sleep 1; done"
    ]
  }

}